/*!
 * gulp-nunjucks-sass-template
 * A Gulp 4 template including SCSS, Nunjucks, JS and more
 *
 * Url: https://github.com/DefaultSimon
 * Author: Simon Goričar
 * Copyright 2019-2020. MIT licensed.
 */
document.addEventListener("DOMContentLoaded",function(){const e=document.querySelectorAll(".header_tags .tag");let t,o,n=[];function r(){if(console.log(window.innerWidth>=1024,window.innerWidth>window.innerHeight),document.querySelector(".compilation")){let e,t,o,n=document.querySelectorAll(".compilation .item");window.innerWidth<1024&&window.innerWidth<window.innerHeight?(e=n[0].querySelector(".item_image").offsetWidth,t=e/2*3,Array.prototype.forEach.call(n,function(e){e.querySelector(".item_image").style.height=t+"px"})):(e=n[0].offsetWidth,t=n[0].classList.contains("wide")?(e-40)/151*106:(e-40)/76*53,Array.prototype.forEach.call(n,function(e){let n=e.querySelector(".item_image");o=e.querySelector(".item_tags"),n.style.height=t+"px",o.style.top=t+"px"}))}function r(e,t){t.onclick=(()=>new function(){e.classList.toggle("open")})}if(document.querySelector("#copyLink")&&document.querySelector("#copyLink").addEventListener("click",()=>{let e=document.createElement("input"),t=window.location.href;document.body.appendChild(e),e.value=t,e.select(),document.execCommand("copy"),document.body.removeChild(e)}),document.querySelector(".header_tags")){let r=document.querySelector(".header_tags"),c=document.querySelector(".header_tags .tag_list"),l=document.querySelector(".header_tags .tag-wrapper"),s=0,a=r.offsetWidth,d=l.offsetWidth,u=0,f=Array.prototype.slice.call(e),y=n.slice();function i(e){if(u=d-24,document.querySelector(".header_tags .tag.current"))do{u+=y[e],e++}while(u<=a-d-24-26&&e<f.length);else do{u+=y[e],e++}while(u<=a-d-24&&e<f.length);return e}s=i(s);let p=document.querySelectorAll(".header_tags .tag");if(t){if(o()>s){let e=y[o()];f.splice(o(),1),y.splice(o(),1);let n=s-1;f.splice(n,0,t),y.splice(n,0,e)}s=i(s=0)}Array.prototype.forEach.call(p,function(e){e.remove()});for(let e=0;e<s;e++)l.before(f[e]);for(let e=s;e<f.length;e++)c.append(f[e]);r.style.flexWrap="nowrap"}if(document.querySelector(".header_tags")){const e=document.querySelector(".header_menu"),t=e.querySelector(".menu"),o=e.querySelector(".btn-icon");new r(t,o);const n=document.querySelector(".header_language"),i=n.querySelector(".language"),c=n.querySelector(".btn-icon");new r(i,c);const l=document.querySelector(".header_notification"),s=l.querySelector(".notification"),a=l.querySelector(".btn-icon");new r(s,a);const d=document.querySelector(".header_tags .tag-wrapper"),u=d.querySelector(".tag_list"),f=d.querySelector(".tag-button");new r(u,f),document.onclick=(e=>{let n=e.target,r=n===t||t.contains(n),l=n===o,d=t.classList.contains("open"),y=n===i||i.contains(n),p=n===c,h=i.classList.contains("open"),g=n===s||s.contains(n),m=n===a,w=s.classList.contains("open"),q=n===u||u.contains(n),S=n===f,_=u.classList.contains("open");r||l||!d||t.classList.toggle("open"),y||p||!h||i.classList.toggle("open"),g||m||!w||s.classList.toggle("open"),q||S||!_||u.classList.toggle("open")})}let c=document.querySelector(".article"),l=document.querySelector(".article_image");if(c&&window.innerWidth>=1024&&window.innerWidth>window.innerHeight){let e,t,o=document.querySelector(".article_image-picture"),n=document.querySelector(".article_image-caption");console.log(c.offsetWidth,c.querySelector(".wrapper").offsetWidth),c.offsetWidth/2<c.querySelector(".wrapper").offsetWidth?(l.offsetHeight+80>window.innerHeight?(o.style.height=l.offsetHeight-n.offsetHeight+"px",t=(e=o.offsetHeight)/153*102):e=(t=c.offsetWidth/2-80)/102*153,l.style.width=t+"px",document.querySelector(".article").style.paddingLeft=t+40+"px"):(l.offsetHeight+80>window.innerHeight&&(o.style.height=l.offsetHeight-n.offsetHeight+"px"),t=(e=o.offsetHeight)/153*102,l.style.width=t+"px",document.querySelector(".article").style.paddingLeft=t+40+"px");let r=0,i=0;document.onscroll=function(){if(document.querySelector(".article")){let e,t=document.querySelector("section.article").offsetHeight,o=document.querySelector(".header").offsetHeight,n=document.querySelector(".banners_container"),c=n.offsetHeight,s=document.querySelector(".banners_wrapper").offsetHeight,a=document.querySelector(".content").offsetHeight,d=pageYOffset-r;c-s>0&&(i+=e=d/(a/(c-s+48)),n.style.transform="translateY("+-1*i+"px)"),pageYOffset>40&&pageYOffset<t+o-l.offsetHeight-100?(l.style.position="fixed",l.style.top="40px",l.style.bottom="auto",l.style.width=l.offsetWidth+"px"):pageYOffset>40&&pageYOffset>t+o-l.offsetHeight-100?(l.style.position="absolute",l.style.top="auto",l.style.bottom="80px",l.style.width=l.offsetWidth+"px"):(l.style.position="absolute",l.style.top="40px",l.style.bottom="auto",l.style.width=l.offsetWidth+"px"),r=pageYOffset}}}}document.querySelector(".header_tags")&&(Array.prototype.forEach.call(e,function(e){n.push(e.offsetWidth+12)}),t=document.querySelector(".header_tags .tag.current"),o=function(){if(null!==t)return Array.prototype.slice.call(e).indexOf(t)}),new r,window.onresize=r});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
