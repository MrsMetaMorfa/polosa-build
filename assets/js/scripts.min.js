/*!
 * gulp-nunjucks-sass-template
 * A Gulp 4 template including SCSS, Nunjucks, JS and more
 *
 * Url: https://github.com/DefaultSimon
 * Author: Simon Goričar
 * Copyright 2019-2020. MIT licensed.
 */
document.addEventListener("DOMContentLoaded",function(){const e=document.querySelectorAll(".header_tags .tag");let t,o,r=[];function n(){if(console.log(window.innerWidth>=1024,window.innerWidth>window.innerHeight),document.querySelector(".compilation")){let e,t,o,r=document.querySelectorAll(".compilation .item");window.innerWidth<1024&&window.innerWidth<window.innerHeight?(e=r[0].querySelector(".item_image").offsetWidth,t=e/2*3,Array.prototype.forEach.call(r,function(e){e.querySelector(".item_image").style.height=t+"px"})):(e=r[0].offsetWidth,t=r[0].classList.contains("wide")?(e-40)/151*106:(e-40)/53*76,Array.prototype.forEach.call(r,function(e){let r=e.querySelector(".item_image");o=e.querySelector(".item_tags"),r.style.height=t+"px",o.style.top=t+"px"}))}function n(e,t){t&&(t.onclick=(()=>new function(){e.classList.toggle("open")}))}if(document.querySelector("#copyLink")&&document.querySelector("#copyLink").addEventListener("click",()=>{let e=document.createElement("input"),t=window.location.href;document.body.appendChild(e),e.value=t,e.select(),document.execCommand("copy"),document.body.removeChild(e)}),document.querySelector(".header_tags")){let n=document.querySelector(".header_tags"),l=document.querySelector(".header_tags .tag_list"),i=document.querySelector(".header_tags .tag-wrapper"),a=0,s=n.offsetWidth,u=i.offsetWidth,d=0,f=Array.prototype.slice.call(e),y=r.slice();function c(e){if(d=u-24,document.querySelector(".header_tags .tag.current"))do{d+=y[e],e++}while(d<=s-u-24-26&&e<f.length);else do{d+=y[e],e++}while(d<=s-u-24&&e<f.length);return e}a=c(a);let h=document.querySelectorAll(".header_tags .tag");if(t){if(o()>a){let e=y[o()];f.splice(o(),1),y.splice(o(),1);let r=a-1;f.splice(r,0,t),y.splice(r,0,e)}a=c(a=0)}Array.prototype.forEach.call(h,function(e){e.remove()});for(let e=0;e<a;e++)i.before(f[e]);for(let e=a;e<f.length;e++)l.append(f[e]);n.style.flexWrap="nowrap"}if(document.querySelector(".header_tags")||document.querySelector(".header_menu")||document.querySelector(".header_notification")||document.querySelector(".header_language")||document.querySelector(".article .share")){let e,t,o,r,c,l,i,a,s,u,d,f,y,h,g;document.querySelector(".header_menu")&&(e=document.querySelector(".header_menu"),t=e.querySelector(".menu"),o=e.querySelector(".btn-icon")),new n(t,o),document.querySelector(".header_language")&&(r=document.querySelector(".header_language"),c=r.querySelector(".language"),l=r.querySelector(".btn-icon")),new n(c,l),document.querySelector(".header_notification")&&(i=document.querySelector(".header_notification"),a=i.querySelector(".notification"),s=i.querySelector(".btn-icon")),new n(a,s),document.querySelector(".header_tags")&&(u=document.querySelector(".header_tags .tag-wrapper"),d=u.querySelector(".tag_list"),f=u.querySelector(".tag-button")),new n(d,f),document.querySelector(".article .share")&&(y=document.querySelector(".article .share"),h=y.querySelector(".share_list"),g=y.querySelector(".share_button")),new n(h,g),document.onclick=(e=>{let r,n,i,u,y,m,p,q,S,w,_,x,H,L,W,b=e.target;document.querySelector(".header_menu")&&(r=b===t||t.contains(b),n=b===o,i=t.classList.contains("open")),document.querySelector(".header_language")&&(u=b===c||c.contains(b),y=b===l,m=c.classList.contains("open")),document.querySelector(".header_notification")&&(p=b===a||a.contains(b),q=b===s,S=a.classList.contains("open")),document.querySelector(".header_tags")&&(w=b===d||d.contains(b),_=b===f,x=d.classList.contains("open")),document.querySelector(".article .share")&&(H=b===h||h.contains(b),L=b===g,W=h.classList.contains("open")),document.querySelector(".header_menu")&&!r&&!n&&i&&t.classList.toggle("open"),document.querySelector(".header_language")&&!u&&!y&&m&&c.classList.toggle("open"),document.querySelector(".header_notification")&&!p&&!q&&S&&a.classList.toggle("open"),document.querySelector(".header_tags")&&!w&&!_&&x&&d.classList.toggle("open"),console.log(document.querySelector(".article .share"),h,!H,!L,W),document.querySelector(".article .share")&&!H&&!L&&W&&h.classList.toggle("open")})}let l=document.querySelector(".article"),i=document.querySelector(".article_image");if(l)if(window.innerWidth>window.innerHeight){let e,t,o=document.querySelector(".article_image-picture"),r=document.querySelector(".article_image-caption");o.style.height="auto",o.style.width="auto",l.offsetWidth/2<l.querySelector(".wrapper").offsetWidth&&l.offsetWidth<1100?(console.log("tablet landscape"),o.offsetHeight+r.offsetHeight+80>window.innerHeight?e=(t=l.offsetWidth/2-120)/102*153:(o.style.height=i.offsetHeight-r.offsetHeight+"px",t=(e=o.offsetHeight)/153*102),i.style.width=t+"px",document.querySelector(".article").style.paddingLeft=t+40+"px"):(o.offsetHeight+r.offsetHeight+80>window.innerHeight&&(o.style.height=i.offsetHeight-r.offsetHeight+"px"),t=(e=o.offsetHeight)/153*102,i.style.width=t+"px",document.querySelector(".article").style.paddingLeft=t+40+"px");let n=0,c=0;document.onscroll=function(){if(document.querySelector(".article")){let e,t=document.querySelector("section.article").offsetHeight,o=document.querySelector(".header").offsetHeight,r=document.querySelector(".banners_container"),l=r.offsetHeight,a=document.querySelector(".banners_wrapper").offsetHeight,s=document.querySelector(".content").offsetHeight,u=pageYOffset-n;l-a>0&&(l-a>(c+=e=u/(s/(l-a+140)))?r.style.transform="translateY("+-1*c+"px)":l-a<=c?r.style.transform="translateY("+-1*(l-a)+"px)":c<0&&(r.style.transform="translateY(0px)")),pageYOffset>40&&pageYOffset<t+o-i.offsetHeight-100?(i.style.position="fixed",i.style.top="40px",i.style.bottom="auto",i.style.width=i.offsetWidth+"px"):pageYOffset>40&&pageYOffset>t+o-i.offsetHeight-100?(i.style.position="absolute",i.style.top="auto",i.style.bottom="80px",i.style.width=i.offsetWidth+"px"):(i.style.position="absolute",i.style.top="40px",i.style.bottom="auto",i.style.width=i.offsetWidth+"px"),n=pageYOffset}}}else document.querySelector(".article").style.paddingLeft="16px"}document.querySelector(".header_tags")&&(Array.prototype.forEach.call(e,function(e){r.push(e.offsetWidth+12)}),t=document.querySelector(".header_tags .tag.current"),o=function(){if(null!==t)return Array.prototype.slice.call(e).indexOf(t)}),new n,window.onresize=n});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
