/*!
 * gulp-nunjucks-sass-template
 * A Gulp 4 template including SCSS, Nunjucks, JS and more
 *
 * Url: https://github.com/DefaultSimon
 * Author: Simon Goriƒçar
 * Copyright 2019-2020. MIT licensed.
 */
document.addEventListener("DOMContentLoaded",function(){const e=document.querySelectorAll(".main .nav .tag");let t,n,o=[];function i(){if(document.querySelector(".compilation")){let e,t,n,o=document.querySelectorAll(".item");window.innerWidth<=1024&&window.innerWidth<window.innerHeight?(e=o[0].querySelector(".item_image").offsetWidth,t=e/141*212,Array.prototype.forEach.call(o,function(e){e.querySelector(".item_image").style.height=t+"px"})):(e=o[0].offsetWidth,t=e/141*212,o[0].classList.contains("wide")&&(t=e/151*106),Array.prototype.forEach.call(o,function(e){let o=e.querySelector(".item_image");n=e.querySelector(".item_tags"),o.style.height=t+"px",n.style.top=t+"px"}))}if(document.querySelector(".article")){let e,t,n=document.querySelector(".article_image");window.innerWidth<=1024&&window.innerWidth<window.innerHeight?(n.style.width="inherit",n.style.height="inherit",t=n.offsetWidth,e=n.offsetHeight,n.nextElementSibling.style.paddingLeft=0,n.style.height=e+"px",n.nextElementSibling.querySelector(".header").style.marginBottom=e+"px"):window.innerWidth>1024&&window.innerWidth>window.innerHeight?(n.style.width="inherit",n.style.height="inherit",t=(e=n.offsetHeight)/212*141,n.nextElementSibling.querySelector(".header").style.marginBottom="inherit",n.style.width=t+"px",n.nextElementSibling.style.paddingLeft=t+64+"px"):(n.style.width="inherit",n.style.height="inherit",e=n.offsetHeight,t=n.offsetWidth,n.nextElementSibling.querySelector(".header").style.marginBottom="inherit",n.style.width=t+"px",n.nextElementSibling.style.paddingLeft=t+48+"px")}function i(e,t){t.onclick=(()=>new function(){e.classList.toggle("open")})}if(document.querySelector("#copyLink")&&document.querySelector("#copyLink").addEventListener("click",()=>{let e=document.createElement("input"),t=window.location.href;document.body.appendChild(e),e.value=t,e.select(),document.execCommand("copy"),document.body.removeChild(e)}),document.querySelector(".main .nav")){console.log(n());let i=document.querySelector(".main .nav"),l=document.querySelector(".main .nav .tag_list"),c=document.querySelector(".main .nav .tag-wrapper"),a=0,s=i.offsetWidth,u=c.offsetWidth,d=0,y=Array.prototype.slice.call(e),m=o;function r(e){if(d=0,document.querySelector(".main .nav .tag.current"))for(;d<=s-u-6-26&&e<y.length;)d+=m[e],e++;else for(;d<=s-u-6&&e<y.length;)d+=m[e],e++;return e}a=r(a);let h=document.querySelectorAll(".main .nav .tag");if(t){if(a-=1,n()>a){let e=m[n()];y.splice(n(),1),m.splice(n(),1);let o=a-1;y.splice(o,0,t),m.splice(o,0,e)}a=r(a=0)}a-=1,Array.prototype.forEach.call(h,function(e){e.remove()});for(let e=0;e<a;e++)c.before(y[e]);for(let e=a;e<y.length;e++)l.append(y[e])}if(document.querySelector(".header_top")||document.querySelector(".main .nav")){const e=document.querySelector(".header_menu"),t=e.querySelector(".menu"),n=e.querySelector(".btn-icon");new i(t,n);const o=document.querySelector(".header_language"),r=o.querySelector(".language"),l=o.querySelector(".btn-icon");new i(r,l);const c=document.querySelector(".header_notification"),a=c.querySelector(".notification"),s=c.querySelector(".btn-icon");new i(a,s);const u=document.querySelector(".main .nav .tag-wrapper"),d=u.querySelector(".tag_list"),y=u.querySelector(".tag-button");new i(d,y),document.onclick=(e=>{let o=e.target,i=o==t||t.contains(o),c=o==n,u=t.classList.contains("open"),m=o==r||r.contains(o),h=o==l,g=r.classList.contains("open"),f=o==a||a.contains(o),p=o==s,S=a.classList.contains("open"),q=o==d||d.contains(o),w=o==y,L=d.classList.contains("open");i||c||!u||t.classList.toggle("open"),m||h||!g||r.classList.toggle("open"),f||p||!S||a.classList.toggle("open"),q||w||!L||d.classList.toggle("open")})}}document.querySelector(".main .nav")&&(Array.prototype.forEach.call(e,function(e){o.push(e.offsetWidth+12)}),t=document.querySelector(".main .nav .tag.current"),n=function(){if(null!==t)return Array.prototype.slice.call(e).indexOf(t)}),new i,window.onresize=i});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
