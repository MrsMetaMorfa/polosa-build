/*!
 * gulp-nunjucks-sass-template
 * A Gulp 4 template including SCSS, Nunjucks, JS and more
 *
 * Url: https://github.com/DefaultSimon
 * Author: Simon Goriƒçar
 * Copyright 2019-2020. MIT licensed.
 */
document.addEventListener("DOMContentLoaded",function(){function e(){if(document.querySelector(".compilation")){let e,t,i=document.querySelectorAll(".item");window.innerWidth<1024&&window.innerWidth<window.innerHeight?(e=i[0].querySelector(".item_image").offsetWidth,t=e/141*212,Array.prototype.forEach.call(i,function(e){console.log(e),e.querySelector(".item_image").style.height=t+"px"})):(e=i[0].offsetWidth,t=e/141*212,Array.prototype.forEach.call(i,function(e){console.log(e),e.querySelector(".item_image").style.height=t+"px"}))}if(document.querySelector(".article")){let e,t,i=document.querySelector(".article_image");window.innerWidth<=1024&&window.innerWidth<window.innerHeight?(i.style.width="inherit",i.style.height="inherit",t=i.offsetWidth,e=i.offsetHeight,console.log(e,t),i.nextElementSibling.style.paddingLeft=0,i.style.height=e+"px",i.nextElementSibling.querySelector(".header").style.marginBottom=e+"px"):window.innerWidth>1024&&window.innerWidth>window.innerHeight?(i.style.width="inherit",i.style.height="inherit",t=(e=i.offsetHeight)/212*141,i.nextElementSibling.querySelector(".header").style.marginBottom="inherit",i.style.width=t+"px",i.nextElementSibling.style.paddingLeft=t+64+"px"):(i.style.width="inherit",i.style.height="inherit",e=i.offsetHeight,t=i.offsetWidth,i.nextElementSibling.querySelector(".header").style.marginBottom="inherit",i.style.width=t+"px",i.nextElementSibling.style.paddingLeft=t+64+"px")}document.querySelector("#copyLink")&&document.querySelector("#copyLink").addEventListener("click",()=>{let e=document.createElement("input"),t=window.location.href;document.body.appendChild(e),e.value=t,e.select(),document.execCommand("copy"),document.body.removeChild(e)})}new e,window.onresize=e});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiU3RhcnRTY3JpcHRzIiwicXVlcnlTZWxlY3RvciIsIml0ZW1XaWR0aCIsImltYWdlSGVpZ2h0IiwiaXRlbXNPblBhZ2UiLCJxdWVyeVNlbGVjdG9yQWxsIiwid2luZG93IiwiaW5uZXJXaWR0aCIsImlubmVySGVpZ2h0Iiwib2Zmc2V0V2lkdGgiLCJBcnJheSIsInByb3RvdHlwZSIsImZvckVhY2giLCJjYWxsIiwiZWxlbSIsImNvbnNvbGUiLCJsb2ciLCJzdHlsZSIsImhlaWdodCIsImltYWdlV2lkdGgiLCJhcnRpY2xlSW1hZ2UiLCJ3aWR0aCIsIm9mZnNldEhlaWdodCIsIm5leHRFbGVtZW50U2libGluZyIsInBhZGRpbmdMZWZ0IiwibWFyZ2luQm90dG9tIiwiZHVtbXkiLCJjcmVhdGVFbGVtZW50IiwidGV4dCIsImxvY2F0aW9uIiwiaHJlZiIsImJvZHkiLCJhcHBlbmRDaGlsZCIsInZhbHVlIiwic2VsZWN0IiwiZXhlY0NvbW1hbmQiLCJyZW1vdmVDaGlsZCIsIm9ucmVzaXplIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBQSxTQUFBQyxpQkFBQSxtQkFBQSxXQUNBLFNBQUFDLElBRUEsR0FBQUYsU0FBQUcsY0FBQSxnQkFBQSxDQUNBLElBQUFDLEVBQUFDLEVBQUFDLEVBQUFOLFNBQUFPLGlCQUFBLFNBQ0FDLE9BQUFDLFdBQUEsTUFBQUQsT0FBQUMsV0FBQUQsT0FBQUUsYUFDQU4sRUFBQUUsRUFBQSxHQUFBSCxjQUFBLGVBQUFRLFlBUEFOLEVBQUEsRUFBQSxJQUFBLElBQ0FPLE1BQUFDLFVBQUFDLFFBQUFDLEtBQUFULEVBQUEsU0FBQVUsR0FDQUMsUUFBQUMsSUFBQUYsR0FDQUEsRUFBQWIsY0FBQSxlQUNBZ0IsTUFBQUMsT0FBQWYsRUFBQSxTQUdBRCxFQUFBRSxFQUFBLEdBQUFLLFlBQ0FOLEVBQUEsRUFBQSxJQUFBLElBQ0FPLE1BQUFDLFVBQUFDLFFBQUFDLEtBQUFULEVBQUEsU0FBQVUsR0FDQUMsUUFBQUMsSUFBQUYsR0FDQUEsRUFBQWIsY0FBQSxlQUNBZ0IsTUFBQUMsT0FBQWYsRUFBQSxRQUtBLEdBQUFMLFNBQUFHLGNBQUEsWUFBQSxDQUNBLElBQ0FFLEVBQUFnQixFQURBQyxFQUFBdEIsU0FBQUcsY0FBQSxrQkFFQUssT0FBQUMsWUFBQSxNQUFBRCxPQUFBQyxXQUFBRCxPQUFBRSxhQUNBWSxFQUFBSCxNQUFBSSxNQUFBLFVBQ0FELEVBQUFILE1BQUFDLE9BQUEsVUFDQUMsRUFBQUMsRUFBQVgsWUFDQU4sRUFBQWlCLEVBQUFFLGFBQ0FQLFFBQUFDLElBQUFiLEVBQUFnQixHQUNBQyxFQUFBRyxtQkFBQU4sTUFBQU8sWUFBQSxFQUNBSixFQUFBSCxNQUFBQyxPQUFBZixFQUFBLEtBQ0FpQixFQUFBRyxtQkFBQXRCLGNBQUEsV0FBQWdCLE1BQUFRLGFBQUF0QixFQUFBLE1BQ0FHLE9BQUFDLFdBQUEsTUFBQUQsT0FBQUMsV0FBQUQsT0FBQUUsYUFDQVksRUFBQUgsTUFBQUksTUFBQSxVQUNBRCxFQUFBSCxNQUFBQyxPQUFBLFVBRUFDLEdBREFoQixFQUFBaUIsRUFBQUUsY0FDQSxJQUFBLElBQ0FGLEVBQUFHLG1CQUFBdEIsY0FBQSxXQUFBZ0IsTUFBQVEsYUFBQSxVQUNBTCxFQUFBSCxNQUFBSSxNQUFBRixFQUFBLEtBQ0FDLEVBQUFHLG1CQUFBTixNQUFBTyxZQUFBTCxFQUFBLEdBQUEsT0FFQUMsRUFBQUgsTUFBQUksTUFBQSxVQUNBRCxFQUFBSCxNQUFBQyxPQUFBLFVBQ0FmLEVBQUFpQixFQUFBRSxhQUNBSCxFQUFBQyxFQUFBWCxZQUNBVyxFQUFBRyxtQkFBQXRCLGNBQUEsV0FBQWdCLE1BQUFRLGFBQUEsVUFDQUwsRUFBQUgsTUFBQUksTUFBQUYsRUFBQSxLQUNBQyxFQUFBRyxtQkFBQU4sTUFBQU8sWUFBQUwsRUFBQSxHQUFBLE1BR0FyQixTQUFBRyxjQUFBLGNBQ0FILFNBQUFHLGNBQUEsYUFBQUYsaUJBQUEsUUFBQSxLQUNBLElBQUEyQixFQUFBNUIsU0FBQTZCLGNBQUEsU0FDQUMsRUFBQXRCLE9BQUF1QixTQUFBQyxLQUVBaEMsU0FBQWlDLEtBQUFDLFlBQUFOLEdBQ0FBLEVBQUFPLE1BQUFMLEVBQ0FGLEVBQUFRLFNBQ0FwQyxTQUFBcUMsWUFBQSxRQUNBckMsU0FBQWlDLEtBQUFLLFlBQUFWLEtBS0EsSUFBQTFCLEVBRUFNLE9BQUErQixTQUFBckMiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyDQkNC90LDQu9C+0LMgJChkb2N1bWVudCkucmVhZHkoKVxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZ1bmN0aW9uKCkge1xuICBmdW5jdGlvbiBTdGFydFNjcmlwdHMoKSB7XG5cbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbXBpbGF0aW9uJykpIHtcbiAgICAgIGxldCBpdGVtc09uUGFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pdGVtJyksIGl0ZW1XaWR0aCwgaW1hZ2VIZWlnaHQ7XG4gICAgICBpZiAoKHdpbmRvdy5pbm5lcldpZHRoIDwgMTAyNCkgJiYgKHdpbmRvdy5pbm5lcldpZHRoIDwgd2luZG93LmlubmVySGVpZ2h0KSkge1xuICAgICAgICBpdGVtV2lkdGggPSBpdGVtc09uUGFnZVswXS5xdWVyeVNlbGVjdG9yKCcuaXRlbV9pbWFnZScpLm9mZnNldFdpZHRoO1xuICAgICAgICBpbWFnZUhlaWdodCA9IChpdGVtV2lkdGgpIC8gMTQxICogMjEyO1xuICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGl0ZW1zT25QYWdlLCBmdW5jdGlvbihlbGVtKXtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlbGVtKTtcbiAgICAgICAgICBsZXQgaW1hZ2UgPSBlbGVtLnF1ZXJ5U2VsZWN0b3IoJy5pdGVtX2ltYWdlJyk7XG4gICAgICAgICAgaW1hZ2Uuc3R5bGUuaGVpZ2h0ID0gaW1hZ2VIZWlnaHQgKyAncHgnO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGl0ZW1XaWR0aCA9IGl0ZW1zT25QYWdlWzBdLm9mZnNldFdpZHRoO1xuICAgICAgICBpbWFnZUhlaWdodCA9IChpdGVtV2lkdGgpIC8gMTQxICogMjEyO1xuICAgICAgICBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGl0ZW1zT25QYWdlLCBmdW5jdGlvbihlbGVtKXtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlbGVtKTtcbiAgICAgICAgICBsZXQgaW1hZ2UgPSBlbGVtLnF1ZXJ5U2VsZWN0b3IoJy5pdGVtX2ltYWdlJyk7XG4gICAgICAgICAgaW1hZ2Uuc3R5bGUuaGVpZ2h0ID0gaW1hZ2VIZWlnaHQgKyAncHgnO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmFydGljbGUnKSkge1xuICAgICAgbGV0IGFydGljbGVJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5hcnRpY2xlX2ltYWdlJyksXG4gICAgICAgICAgaW1hZ2VIZWlnaHQsIGltYWdlV2lkdGg7XG4gICAgICBpZiAoICh3aW5kb3cuaW5uZXJXaWR0aCA8PSAxMDI0KSAmJiAod2luZG93LmlubmVyV2lkdGggPCB3aW5kb3cuaW5uZXJIZWlnaHQpICkge1xuICAgICAgICBhcnRpY2xlSW1hZ2Uuc3R5bGUud2lkdGggPSAnaW5oZXJpdCc7XG4gICAgICAgIGFydGljbGVJbWFnZS5zdHlsZS5oZWlnaHQgPSAnaW5oZXJpdCc7XG4gICAgICAgIGltYWdlV2lkdGggPSBhcnRpY2xlSW1hZ2Uub2Zmc2V0V2lkdGg7XG4gICAgICAgIGltYWdlSGVpZ2h0ID0gYXJ0aWNsZUltYWdlLm9mZnNldEhlaWdodDtcbiAgICAgICAgY29uc29sZS5sb2coaW1hZ2VIZWlnaHQsIGltYWdlV2lkdGgpO1xuICAgICAgICBhcnRpY2xlSW1hZ2UubmV4dEVsZW1lbnRTaWJsaW5nLnN0eWxlLnBhZGRpbmdMZWZ0ID0gMDtcbiAgICAgICAgYXJ0aWNsZUltYWdlLnN0eWxlLmhlaWdodCA9IGltYWdlSGVpZ2h0ICsgJ3B4JztcbiAgICAgICAgYXJ0aWNsZUltYWdlLm5leHRFbGVtZW50U2libGluZy5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyJykuc3R5bGUubWFyZ2luQm90dG9tID0gaW1hZ2VIZWlnaHQgKyAncHgnO1xuICAgICAgfSBlbHNlIGlmICgod2luZG93LmlubmVyV2lkdGggPiAxMDI0KSAmJiAod2luZG93LmlubmVyV2lkdGggPiB3aW5kb3cuaW5uZXJIZWlnaHQpKSB7XG4gICAgICAgIGFydGljbGVJbWFnZS5zdHlsZS53aWR0aCA9ICdpbmhlcml0JztcbiAgICAgICAgYXJ0aWNsZUltYWdlLnN0eWxlLmhlaWdodCA9ICdpbmhlcml0JztcbiAgICAgICAgaW1hZ2VIZWlnaHQgPSBhcnRpY2xlSW1hZ2Uub2Zmc2V0SGVpZ2h0O1xuICAgICAgICBpbWFnZVdpZHRoID0gKGltYWdlSGVpZ2h0KSAvIDIxMiAqIDE0MTtcbiAgICAgICAgYXJ0aWNsZUltYWdlLm5leHRFbGVtZW50U2libGluZy5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyJykuc3R5bGUubWFyZ2luQm90dG9tID0gJ2luaGVyaXQnO1xuICAgICAgICBhcnRpY2xlSW1hZ2Uuc3R5bGUud2lkdGggPSBpbWFnZVdpZHRoICsgJ3B4JztcbiAgICAgICAgYXJ0aWNsZUltYWdlLm5leHRFbGVtZW50U2libGluZy5zdHlsZS5wYWRkaW5nTGVmdCA9IChpbWFnZVdpZHRoICsgNjQpICsgJ3B4JztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFydGljbGVJbWFnZS5zdHlsZS53aWR0aCA9ICdpbmhlcml0JztcbiAgICAgICAgYXJ0aWNsZUltYWdlLnN0eWxlLmhlaWdodCA9ICdpbmhlcml0JztcbiAgICAgICAgaW1hZ2VIZWlnaHQgPSBhcnRpY2xlSW1hZ2Uub2Zmc2V0SGVpZ2h0O1xuICAgICAgICBpbWFnZVdpZHRoID0gYXJ0aWNsZUltYWdlLm9mZnNldFdpZHRoO1xuICAgICAgICBhcnRpY2xlSW1hZ2UubmV4dEVsZW1lbnRTaWJsaW5nLnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXInKS5zdHlsZS5tYXJnaW5Cb3R0b20gPSAnaW5oZXJpdCc7XG4gICAgICAgIGFydGljbGVJbWFnZS5zdHlsZS53aWR0aCA9IGltYWdlV2lkdGggKyAncHgnO1xuICAgICAgICBhcnRpY2xlSW1hZ2UubmV4dEVsZW1lbnRTaWJsaW5nLnN0eWxlLnBhZGRpbmdMZWZ0ID0gKGltYWdlV2lkdGggKyA2NCkgKyAncHgnO1xuICAgICAgfVxuICAgIH1cbiAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2NvcHlMaW5rJykpIHtcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb3B5TGluaycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICBsZXQgZHVtbXkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpLFxuICAgICAgICAgICAgdGV4dCA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmO1xuXG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoZHVtbXkpO1xuICAgICAgICBkdW1teS52YWx1ZSA9IHRleHQ7XG4gICAgICAgIGR1bW15LnNlbGVjdCgpO1xuICAgICAgICBkb2N1bWVudC5leGVjQ29tbWFuZCgnY29weScpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGR1bW15KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIG5ldyBTdGFydFNjcmlwdHMoKTtcblxuICB3aW5kb3cub25yZXNpemUgPSBTdGFydFNjcmlwdHM7XG59KTtcblxuXG4vLyAvLyDQldGB0LvQuCDQtNC+0LvQttC10L0g0LHRi9GC0Ywg0L3QsNC50LTQtdC9INC+0LTQuNC9INGN0LvQtdC80LXQvdGCXG4vLyBpZigoZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9ybVwiKSkgIT09IG51bGwpXG4vLyAgIGUuY2xhc3NMaXN0LmFkZCgnbGFzdCcpOyAvLyDQkNC90LDQu9C+0LMg0LLRi9Cx0L7RgNC60Lgg0Lgg0L/RgNC40YHQstC+0LXQvdC40Y8g0LrQu9Cw0YHRgdCwXG4vLyAvLyDQldGB0LvQuCDRjdC70LXQvNC10L3RgtC+0LIg0LHRg9C00LXRgiDQvNC90L7Qs9C+XG4vLyBBcnJheS5wcm90b3R5cGUuZm9yRWFjaC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjZm9ybVwiKSwgZnVuY3Rpb24oZSl7XG4vLyAgIGUuY2xhc3NMaXN0LmFkZCgnbGFzdCcpO1xuLy8gfSk7XG4iXX0=
